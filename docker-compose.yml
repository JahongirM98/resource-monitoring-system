services:
  db:
    image: mysql:8.0
    container_name: rm_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: monitoring
      MYSQL_USER: monitor_user
      MYSQL_PASSWORD: monitor_pass
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -proot"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "3306:3306"

  redis:
    image: redis:7
    container_name: rm_redis
    restart: always
    ports:
      - "6379:6379"

  mock:
    image: python:3.12-slim
    container_name: rm_mock
    working_dir: /app
    volumes:
      - ./mock:/app
    command: sh -c "pip install --no-cache-dir fastapi==0.115.0 uvicorn==0.30.6 && uvicorn main:app --host 0.0.0.0 --port 8001"
    ports:
      - "8001:8001"

  app:
    build: .
    container_name: rm_app
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      mock:
        condition: service_started
    ports:
      - "8000:8000"
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py seed_machines --host ${MOCK_HOST:-http://mock:8001} &&
        python manage.py collectstatic --noinput &&
        gunicorn monitor_site.wsgi:application --bind 0.0.0.0:8000 --workers 3
      "

  worker:
    build: .
    container_name: rm_worker
    env_file: .env
    depends_on:
      - redis
      - db
    command: celery -A monitor_site worker -l info

  beat:
    build: .
    container_name: rm_beat
    env_file: .env
    depends_on:
      - redis
      - db
    command: celery -A monitor_site beat -l info
